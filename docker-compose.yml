version: '3.8'

services:
  # 数据库服务
  postgres:
    image: postgres:15-alpine
    container_name: chatfuture-postgres
    environment:
      POSTGRES_DB: chatfuture
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/setup/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chatfuture-network

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: chatfuture-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chatfuture-network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatfuture-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/chatfuture
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key
      SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      OPENAI_API_KEY: ${NEXT_PUBLIC_OPENAI_API_KEY}
      DEEPSEEK_API_KEY: ${NEXT_PUBLIC_DEEPSEEK_API_KEY}
      LOCAL_AI_ENDPOINT: ${NEXT_PUBLIC_LOCAL_AI_ENDPOINT}
      DEFAULT_AI_PROVIDER: ${NEXT_PUBLIC_DEFAULT_AI_PROVIDER}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - chatfuture-network

  # 前端应用服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatfuture-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      NEXT_PUBLIC_OPENAI_API_KEY: ${NEXT_PUBLIC_OPENAI_API_KEY}
      NEXT_PUBLIC_DEEPSEEK_API_KEY: ${NEXT_PUBLIC_DEEPSEEK_API_KEY}
      NEXT_PUBLIC_LOCAL_AI_ENDPOINT: ${NEXT_PUBLIC_LOCAL_AI_ENDPOINT}
      NEXT_PUBLIC_DEFAULT_AI_PROVIDER: ${NEXT_PUBLIC_DEFAULT_AI_PROVIDER}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - chatfuture-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: chatfuture-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - chatfuture-network

volumes:
  postgres_data:
  redis_data:

networks:
  chatfuture-network:
    driver: bridge
